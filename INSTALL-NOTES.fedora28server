After installing Fedora 28:
---------------------------

# noticed after doing an upgrade to Fedora 31 that this line was hopelessly fubar
# removing the extra 'install' commands helped...

dnf install postgresql-server postgresql httpd git perl-Apache-DBI mod_perl perl-Apache-Reload perl-DBD-Pg perl-DateTime perl-URI-Escape-XS perl-Crypt-Eksblowfish perl-Crypt-Random-Source perl-Email-Address perl-MIME-Lite perl-CGI perl-Readonly

# should probably include which zone to add this to, but...
firewall-cmd --add-service http
firewall-cmd --add-service http --permanent

# Next, configure PostgreSQL

# as postgres on Fedora:  initdb -D /var/lib/pgsql/data

# for other systems, add /data to what pwd shows in postgres's home directory
# on Arch Linux, it's /var/lib/postgres/data

as root:  systemctl start postgresql

as postgres:

createuser cms3
createdb cms3 -O cms3

as root: 

systemctl restart postgresql

# Fedora allows connections from the localhost to PostgreSQL
#   have not tested putting Apache on one VM and PG on another
#   I don't foresee any problems with that configuration, as long as you add
#   a line to the end of pg_hba.conf for PostgreSQL and restart it
#   would also need an appropriate listen line in postgresql.conf

# Debian is locked down a bit tighter than Fedora by default.
# There, you'll need to run this in psql:
#
#  alter user cms3 with password 'someGOODpwHere';
#
# Then, edit cms3.pm from this:
#
# $dbh = DBI->connect( "dbi:Pg:dbname=$dbname", $dbuser, q//, { AutoCommit => 1 } ) or carp $STDERR; 
#
# To this:
#
# $dbh = DBI->connect( "dbi:Pg:dbname=$dbname", $dbuser, 'someGOODpwHere', { AutoCommit => 1 } ) or carp $STDERR;
#

change the passwords,email, domain and possibly the username you'll use to login to create/edit pages in the init-tables.pl script.  You should also change the $del_passwd to something else too.  =)  Longer is better with a random mix of alphanumeric and special characters.

once happy with passwords, email, and domain, run:
perl init-tables.pl
-----------------
Installing cms3.pm

Put cms3.pm in a folder called MyApache2 that I usually create in vendor_perl
Depending on the distro, you may have to find site_perl instead.  The mlocate
package helps a great deal with this, just remember to run updatedb after installing it.  

-----------------
To configure Apache2 on Fedora 28, all I had to do was edit example-httpd.conf to change the server name to the domain I was using on this new Fedora 28 VM set
the listen to your machines IP and ServerName to your machines IP (this assumes
that you have nothing else configured, ymmv greatly there, if you do)

echo example-httpd.conf >> /etc/httpd/conf/httpd.conf

systemctl restart httpd

And everything was good.

Systemd does seem to get confused a little from time to time, when i start httpd as httpd, using systemctl is better =)  No more killing all the http processes by hand.
But, to quickly figure out what's stopping a mod_perl handler from starting up...

httpd

and then tail -f /var/log/httpd/error_log &  after the first one.

httpd

fix errors

repeat.

Apache::DBI was the one module not listed in cms3.pm itself that would hang me up, now fifth in the dnf install list at the top.


# end
