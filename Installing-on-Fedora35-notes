Having a few issues with installing this to run on port 8001.   My code needs some work lol.

# while running on a Linode VPS, I moved sshd to port 2200

# firewall-cmd --list-all-zones | more
# firewall-cmd --zone=FedoraServer --add-port=2200/tcp
# firewall-cmd --permanent --zone=FedoraServer --add-port=2200/tcp
# semanage port -a -t ssh_port_t -p tcp 2200

# changed Port 22 to Port 2200 in /etc/ssh/sshd_config
# restarted sshd and verified it was working on 2200 before logging out.
# systemctl stop sshd
# systemctl start sshd

# add http to firewall too
# firewall-cmd --add-service http
# firewall-cmd --add-service http --permanent
# This time, on F35, I'm running on a vm, so the port will be 8000 for httpd and 
# no exposed sshd

yum install postgresql-server postgresql httpd git perl-Apache-DBI mod_perl \
  perl-Apache-Reload perl-DBD-Pg perl-DateTime perl-URI-Escape-XS \
  perl-Crypt-Eksblowfish perl-Crypt-Random-Source perl-Email-Address perl-MIME-Lite\
  perl-CGI perl-Readonly
  
# note: in F28, it was dnf, not sure where it switched back to yum =)
# Next, configure PostgreSQL

# as postgres on Fedora:  initdb -D /var/lib/pgsql/data

As postgres, run initdb
As root, systemctl enable postgresl; systemctl start postgresql
As postgres, createuser cms3 ; createdb cms3 -O cms3
As root, systemctl restart postgresql

# Fedora allows connections from the localhost to PostgreSQL
#   have not tested putting Apache on one VM and PG on another
#   I don't foresee any problems with that configuration, as long as you add
#   a line to the end of pg_hba.conf for PostgreSQL and restart it
#   would also need an appropriate listen line in postgresql.conf

# Debian is locked down a bit tighter than Fedora by default.
# There, you'll need to run this in psql:
#
#  alter user cms3 with password 'someGOODpwHere';
#
# Then, edit cms3.pm from this:
#
# $dbh = DBI->connect( "dbi:Pg:dbname=$dbname", $dbuser, q//, { AutoCommit => 1 } ) or carp $STDERR; 
#
# To this:
#
# $dbh = DBI->connect( "dbi:Pg:dbname=$dbname", $dbuser, 'someGOODpwHere', { AutoCommit => 1 } ) or carp $STDERR;

#####################################################
You will need to get this package onto the new server
#####################################################
git clone https://github.com/kordaff/cms3.git

#####################################################
Installing cms3.pm
#####################################################
Put cms3.pm in a folder called MyApache2 that I usually create in vendor_perl
Depending on the distro, you may have to find site_perl instead.  The mlocate
package helps a great deal with this, just remember to run updatedb after installing it.  

mkdir /usr/lib64/perl5/vendor_perl/MyApache2/
cp cms3/cms3.pm /usr/lib64/perl5/vendor_perl/MyApache2/

On my new install, i changed the hardcoded IP's that limit the edit/delete functions to 
my home IP.   Set those to your home IP.   I also changed the domain that it rewrites
from www.DOMAIN to DOMAIN:

[root@torrkirr ~]# diff cms3.pm ~phil/cms3/cms3.pm
85c85
<     if ( $dom eq 'www.torrkirr.com' ) { $dom   = 'torrkirr.com' }
---
>     if ( $dom eq 'www.perl-user.com' ) { $dom   = 'perl-user.com' }
246c246,247
<     if ( $ip !~ /^173[.]202[.]25[.]215/ ) { return }
---
>     # if ( $ip ne '72.201.204.99' ) { return q/ /; }
>     if ( $ip !~ /^192[.]168[.]1[.]/ ) { return }
795c796,797
<   if ( $ip !~ /^173[.]202[.]25[.]215/ )
---
>   # if ( $ip ne '72.201.204.99' )
>   if ($ip !~ /192[.]168[.]1[.]/ )
832c834,835
<     if ( $ip !~ /^173[.]202[.]25[.]215/ ) {
---
>     if ( $ip !~ /^192[.]168[.]1[.]/ ) {
>     # if ( $ip ne '72.201.204.99' ) {

#####################################################
In cms3/init-tables.pl:
change the passwords,email, domain and possibly the username you'll use to login to 
create/edit pages in the init-tables.pl script.  You should also change the $del_passwd 
to something else too.  =)  Longer is better with a random mix of alphanumeric and 
special characters.

once happy with passwords, email, and domain, run:
perl init-tables.pl

also run:
perl load-delete_page.pl
# otherwise you're missing the page with form to take the delete pw to delete a page.

-----------------
To configure Apache2 on Fedora 28, all I had to do was edit example-httpd.conf to change the server name to the domain I was using on this new Fedora 28 VM set
the listen to your machines IP and ServerName to your machines IP (this assumes
that you have nothing else configured, ymmv greatly there, if you do)

cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/orig.conf
cp example-httpd.conf >> /etc/httpd/conf/httpd.conf

mkdir /var/www/cms3
mkdir /var/www/cms3/images
mkdir /var/www/cms3/fonts
mkdir /var/www/cms3/js
mkdir /var/www/cms3/css

systemctl restart httpd

And everything was good.

Starting httpd as httpd can help find misconfigurations faster but using systemctl is 
better =)  No more killing all the http processes by hand.
But, to quickly figure out what's stopping a mod_perl handler from starting up...

httpd

and then tail -f /var/log/httpd/error_log &  after the first one.

httpd

Fix errors, kill all the httpd, run httpd again

repeat.

Apache::DBI was the one module not listed in cms3.pm itself that would hang me up. 
Now it's fifth in the yum install list at the top.


# end

# first page that comes up is a copy of /welcome that the init-pages.pl script installs.
